const fs = require('fs-extra');
const path = require('path');

const regex = /<!-- MARKDOWNGALLERY: DO NOT EDIT THIS SECTION, AUTOGENERATED -->[\S\s]*<!-- ENDMARKDOWNGALLERY -->/g;
const optimizedIcons = path.join('dist', 'icons');
const readmeFile = 'README.md';
const iconThumbnailSize = 80;
const galleryColumns = 7;

const sourceFiles = fs.readdirSync(optimizedIcons).filter(fn => path.parse(fn).ext === '.svg');
let tableMarkup = `<!-- MARKDOWNGALLERY: DO NOT EDIT THIS SECTION, AUTOGENERATED -->\n`;
let headerRow = '';
let alignmentRow = '';

for (let i=0; i< galleryColumns; i++) {
  headerRow += '|';
  alignmentRow += '|:---:';
}
headerRow += '|';
alignmentRow += '|';
tableMarkup += `${headerRow}\n${alignmentRow}\n`;

let columnCounter = 0;
sourceFiles.forEach(fn => {
  const fileName = path.parse(fn).name;
  let optimizedSource = fs.readFileSync(path.join(optimizedIcons, fn), 'UTF-8');
  optimizedSource = optimizedSource.replace(/viewBox/, `height="${iconThumbnailSize}" width="${iconThumbnailSize}" viewBox`);
  tableMarkup += `|${optimizedSource}<br>${fileName}`;
  columnCounter++;

  if (columnCounter === galleryColumns) {
    tableMarkup += `|\n`;
    columnCounter = 0;
  }
});

tableMarkup += `\n<!-- ENDMARKDOWNGALLERY -->`;

const readmeContents = fs.readFileSync(readmeFile, 'UTF-8');
const updatedContents = readmeContents.replace(regex, tableMarkup);
fs.writeFileSync(readmeFile, updatedContents, 'UTF-8');
